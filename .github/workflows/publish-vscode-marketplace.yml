name: Test and Publish (VS Code Marketplace)

on:
  push:
    branches:
      - main

concurrency:
  group: publish-vscode-marketplace-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test:
    name: Type check, lint, build, and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect version change
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          PREV_PKG_JSON=$(git show HEAD~1:package.json 2>/dev/null || true)
          if [ -n "$PREV_PKG_JSON" ]; then
            PREVIOUS_VERSION=$(echo "$PREV_PKG_JSON" | jq -r .version)
          else
            PREVIOUS_VERSION=""
          fi

          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: ${PREVIOUS_VERSION:-<none>}"

          if [ -n "$PREVIOUS_VERSION" ] && [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
            echo "SHOULD_PUBLISH=false" >> $GITHUB_ENV
          else
            echo "SHOULD_PUBLISH=true" >> $GITHUB_ENV
          fi

      - name: Skip publishing (version unchanged)
        if: env.SHOULD_PUBLISH != 'true'
        run: echo "Version unchanged; skipping build and publish."

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.19

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: TypeScript check
        run: bun run ts

      - name: Lint
        run: bun run lint

      - name: Build
        run: bun run compile

      - name: Unit tests
        run: bun run test

  publish_vscode_marketplace:
    name: Publish to VS Code Marketplace
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: Publish
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect version change
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          PREV_PKG_JSON=$(git show HEAD~1:package.json 2>/dev/null || true)
          if [ -n "$PREV_PKG_JSON" ]; then
            PREVIOUS_VERSION=$(echo "$PREV_PKG_JSON" | jq -r .version)
          else
            PREVIOUS_VERSION=""
          fi

          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: ${PREVIOUS_VERSION:-<none>}"

          if [ -n "$PREVIOUS_VERSION" ] && [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
            echo "SHOULD_PUBLISH=false" >> $GITHUB_ENV
          else
            echo "SHOULD_PUBLISH=true" >> $GITHUB_ENV
          fi

      - name: Setup Bun
        if: env.SHOULD_PUBLISH == 'true'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.19

      - name: Install dependencies
        if: env.SHOULD_PUBLISH == 'true'
        run: bun install --frozen-lockfile

      - name: Build
        if: env.SHOULD_PUBLISH == 'true'
        run: bun run compile

      - name: Package with vsce (no dependency pruning)
        if: env.SHOULD_PUBLISH == 'true'
        run: bunx --bun vsce package --no-dependencies -o horizon.vsix

      - name: Override publisher in VSIX to KacperKozak
        if: env.SHOULD_PUBLISH == 'true'
        run: |
          rm -rf vsix && mkdir vsix
          unzip -q horizon.vsix -d vsix
          pushd vsix
          # Update embedded extension manifest JSON
          jq '.publisher = "KacperKozak"' extension/package.json > extension/package.json.tmp && mv extension/package.json.tmp extension/package.json
          # Update VSIX XML manifest publisher attribute
          sed -i 's/Publisher="[^"]*"/Publisher="KacperKozak"/' extension.vsixmanifest
          zip -qr ../horizon.KacperKozak.vsix .
          popd

      - name: Verify PAT has rights (optional)
        if: env.SHOULD_PUBLISH == 'true'
        env:
          VSCE_PAT: ${{ secrets.MS_VSCE_TOKEN }}
        run: bunx --bun vsce verify-pat KacperKozak

      - name: Publish to VS Code Marketplace
        if: env.SHOULD_PUBLISH == 'true'
        env:
          VSCE_PAT: ${{ secrets.MS_VSCE_TOKEN }}
        run: bunx --bun vsce publish --no-dependencies --skip-duplicate --packagePath horizon.KacperKozak.vsix
